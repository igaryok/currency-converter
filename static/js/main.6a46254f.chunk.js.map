{"version":3,"sources":["store/actions.js","components/Select/index.js","components/Select/Select.js","components/InputSum/index.js","components/InputSum/InputSum.js","store/selector.js","components/ResultSum/index.js","components/ResultSum/ResultSum.js","components/Loader/Loader.js","components/Error/Error.js","components/Converter/index.js","components/Converter/Converter.js","components/ListRates/index.js","components/ListRates/ListRates.js","components/ListRatesCurrency/index.js","components/ListRatesCurrency/ListRatesCurrency.js","components/App/index.js","components/App/App.js","store/rootReducer.js","store/index.js","index.js"],"names":["BASE_URL","ACTIONS_TYPES","SAVE_LIST_CURRENCY","SAVE_RATES_USD","START_LOADING","STOP_LOADING","SET_LOAD_ERROR","SET_CURRENCY_FROM","SET_CURRENCY_TO","SET_CURRENT_SUM","SET_BASE_CURRENCY","SET_SORTED_LIST_RATES","Enhanced","connect","dispatch","setCurrencyFrom","value","type","payload","setCurrencyTo","setBaseCurrency","options","name","defaultValue","typeCurrency","handleChange","option","selectHandleChange","listCurrency","Object","keys","toUpperCase","onChange","e","target","className","map","item","key","selected","setCurrentSum","onInput","event","Number","rootSelector","state","selectListCurrency","createSelector","selectCurrencyFrom","currencyFrom","selectCurrencyTo","currencyTo","selectRates","exchangeRatesUSD","selectCurrentSum","currentSum","selectBaseCurrency","baseCurrency","selectSortedListRates","sortedListRates","selectIsLoading","isLoading","selectIsErrorLoading","errorLoading","rates","result","toFixed","Loader","id","Error","isErrorLoading","to","ratesUSD","saveSortedListRates","data","setSortedListRates","useState","pageCurrency","changePageCurrency","sortedList","length","entries","sort","a","b","useEffect","bgcolor","onClick","elem","find","handleClick","mapDispatch2Props","loadData","Promise","all","fetch","then","response","json","listCurrencies","saveListCurrency","saveRatesUSD","catch","error","setLoadingError","message","finally","path","exact","component","Converter","ListRatesCurrency","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleWares","thunk","store","createStore","action","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6a46254f.chunk.js","sourcesContent":["const BASE_URL = 'https://openexchangerates.org/api/';\nconst URL_CURRENCY = 'currencies.json';\nconst URL_RATES = 'latest.json?app_id=';\nconst API_KEY = 'be9423d4e8744a938087bb2febb7693e';\n\n\nexport const ACTIONS_TYPES = {\n  SAVE_LIST_CURRENCY: 'SAVE_LIST_CURRENCY',\n  SAVE_RATES_USD: 'SAVE_RATES_USD', \n  START_LOADING: 'START_LOADING',\n  STOP_LOADING: 'STOP_LOADING',\n  SET_LOAD_ERROR: 'SET_LOAD_ERROR',\n  SET_CURRENCY_FROM: 'SET_CUURENCY_FROM',\n  SET_CURRENCY_TO: 'SET_CURRENCY_TO',\n  SET_CURRENT_SUM: 'SET_CURRENT_SUM',\n  SET_BASE_CURRENCY: 'SET_BASE_CURRENCY',\n  SET_SORTED_LIST_RATES: 'SET_SORTED_LIST_RATES' \n};\n\nconst saveListCurrency = data => ({\n  type: ACTIONS_TYPES.SAVE_LIST_CURRENCY,\n  payload: data,\n});\n\nconst saveRatesUSD = data => ({\n  type: ACTIONS_TYPES.SAVE_RATES_USD,\n  payload: data\n});\n\nconst startLoading = () => ({\n  type: ACTIONS_TYPES.START_LOADING,\n});\n\nconst stopLoading = () => ({\n  type: ACTIONS_TYPES.STOP_LOADING,\n});\n\nconst setLoadingError = error => ({\n  type: ACTIONS_TYPES.SET_LOAD_ERROR,\n  payload: error,\n});\n\nexport const setBaseCurrency = value => ({\n  type: ACTIONS_TYPES.SET_BASE_CURRENCY,\n  payload: value\n});\n\nexport const setCurrencyFrom = value => ({\n  type: ACTIONS_TYPES.SET_CURRENCY_FROM,\n  payload: value\n});\n\nexport const setCurrencyTo = value => ({\n  type: ACTIONS_TYPES.SET_CURRENCY_TO,\n  payload: value\n});\n\nexport const setCurrentSum = value => ({\n  type: ACTIONS_TYPES.SET_CURRENT_SUM,\n  payload: value\n});\n\nexport const setSortedListRates = data => ({\n  type: ACTIONS_TYPES.SET_SORTED_LIST_RATES,\n  payload: data\n});\n\nexport const loadData = () => dispatch => {\n  dispatch(startLoading());\n  \n  Promise.all([\n    fetch(`${BASE_URL}${URL_CURRENCY}`).then(response => response.json()),\n    fetch(`${BASE_URL}${URL_RATES}${API_KEY}`).then(response => response.json())\n  ]).then(data => {\n    const [listCurrencies, rates] = data;\n\n    dispatch(saveListCurrency(listCurrencies));\n    dispatch(saveRatesUSD(rates.rates));\n  }).catch(error => dispatch(setLoadingError(error.message)))\n    .finally(dispatch(stopLoading()));\n};\n","import { connect } from 'react-redux';\n\nimport { Select } from './Select';\nimport { \n  setCurrencyFrom, \n  setCurrencyTo, \n  setBaseCurrency } from '../../store/actions'; \n\nconst mapDispatch2Props = dispatch => ({\n  setCurrencyFrom: value => dispatch(setCurrencyFrom(value)),\n  setCurrencyTo: value => dispatch(setCurrencyTo(value)),\n  setBaseCurrency: value => dispatch(setBaseCurrency(value))\n});\n\nconst Enhanced = connect(\n  null,\n  mapDispatch2Props\n)(Select);\n\nexport { Enhanced as Select };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Select.scss';\n\nexport const Select = ({ \n  options, \n  name, \n  defaultValue, \n  typeCurrency, \n  setCurrencyFrom, \n  setCurrencyTo, \n  setBaseCurrency \n}) => {\n\n  const selectHandleChange = (option) => {\n    switch (option) {\n      case 'currencyFrom':\n        return setCurrencyFrom;\n      case 'currencyTo':\n        return setCurrencyTo;\n      case 'currencyBase':\n        return setBaseCurrency;\n      default:\n        return;\n    }\n  }\n  const handleChange = selectHandleChange(typeCurrency);\n  const listCurrency = Object.keys(options);\n\n  return (\n    <label>\n      {name.toUpperCase()}\n      <select \n        onChange={e => handleChange(e.target.value)}\n        className='currency-selector'\n      >\n        {listCurrency.map(item => (\n          <option \n            key={item} \n            value={item}\n            selected={defaultValue === item}\n          >\n            {item}\n          </option>\n        ))}\n      </select>\n    </label>\n  )\n}\n\nSelect.propTypes = {\n  options: PropTypes.shape().isRequired,\n  name: PropTypes.string.isRequired,\n  defaultValue: PropTypes.string.isRequired,\n  typeCurrency: PropTypes.string.isRequired,\n  setCurrencyFrom: PropTypes.func.isRequired,\n  setCurrencyTo: PropTypes.func.isRequired,\n  setBaseCurrency: PropTypes.func.isRequired\n};\n","import { connect } from 'react-redux';\n\nimport { InputSum } from './InputSum';\nimport { setCurrentSum } from '../../store/actions'; \n\nconst mapDispatch2Props = dispatch => ({\n  setCurrentSum: value => dispatch(setCurrentSum(value)),\n});\n\nconst Enhanced = connect(\n  null,\n  mapDispatch2Props\n)(InputSum);\n\nexport { Enhanced as InputSum };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Input.scss';\n\nexport const InputSum = ({ defaultValue,  setCurrentSum }) => (\n  <input\n    className='input-field' \n    type='number' \n    defaultValue={defaultValue}\n    onInput={event => setCurrentSum(Number(event.target.value))} \n  />\n);\n\nInputSum.propTypes = {\n  defaultValue: PropTypes.number.isRequired,\n  setCurrentSum: PropTypes.func\n};\n","import { createSelector } from 'reselect';\n\nconst rootSelector = state => state;\n\nexport const selectListCurrency = createSelector(\n  rootSelector,\n  ({ listCurrency }) => listCurrency\n);\n\nexport const selectCurrencyFrom = createSelector(\n  rootSelector,\n  ({ currencyFrom }) => currencyFrom\n);\n\nexport const selectCurrencyTo = createSelector(\n  rootSelector,\n  ({ currencyTo }) => currencyTo\n);\n\nexport const selectRates = createSelector(\n  rootSelector,\n  ({ exchangeRatesUSD }) => exchangeRatesUSD\n);\n\nexport const selectCurrentSum = createSelector(\n  rootSelector,\n  ({ currentSum }) => currentSum\n);\n\nexport const selectBaseCurrency = createSelector(\n  rootSelector,\n  ({ baseCurrency }) => baseCurrency\n);\n\nexport const selectSortedListRates = createSelector(\n  rootSelector,\n  ({ sortedListRates }) => sortedListRates\n);\n\nexport const selectIsLoading = createSelector(\n  rootSelector,\n  ({ isLoading }) => isLoading \n);\n\nexport const selectIsErrorLoading = createSelector(\n  rootSelector,\n  ({ errorLoading }) => errorLoading \n);\n","import { connect } from 'react-redux';\n\nimport { ResultSum } from './ResultSum';\nimport { \n  selectCurrencyFrom, \n  selectCurrencyTo, \n  selectRates, \n  selectCurrentSum \n} from '../../store/selector'; \n\nconst mapStateToProps = state => ({\n  currencyFrom: selectCurrencyFrom(state),\n  currencyTo: selectCurrencyTo(state),\n  rates: selectRates(state),\n  currentSum: selectCurrentSum(state)\n});\n\nconst Enhanced = connect(\n  mapStateToProps\n)(ResultSum);\n\nexport { Enhanced as ResultSum };","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const ResultSum = ({ currencyFrom, currencyTo, rates, currentSum }) => {\n  const result = currentSum * (rates[currencyTo] / rates[currencyFrom]);\n  \n  return (\n    <label>{result.toFixed(3)}</label>\n  )\n};\n\nResultSum.propTypes = {\n  currencyFrom: PropTypes.string.isRequired,\n  currencyTo: PropTypes.string.isRequired,\n  rates: PropTypes.shape().isRequired,\n  currentSum: PropTypes.number.isRequired\n};\n","import React from 'react';\n\nimport './Loader.scss';\n\nexport const Loader = () => (\n  <div id=\"floatingBarsG\">\n    <div className=\"blockG\" id=\"rotateG_01\"></div>\n    <div className=\"blockG\" id=\"rotateG_02\"></div>\n    <div className=\"blockG\" id=\"rotateG_03\"></div>\n    <div className=\"blockG\" id=\"rotateG_04\"></div>\n    <div className=\"blockG\" id=\"rotateG_05\"></div>\n    <div className=\"blockG\" id=\"rotateG_06\"></div>\n    <div className=\"blockG\" id=\"rotateG_07\"></div>\n    <div className=\"blockG\" id=\"rotateG_08\"></div>\n</div>\n);\n","import React from 'react';\n\nimport './Error.scss';\n\nexport const Error = () => (\n  <h2 className=\"message-error\">\n    Sorry, occured error during  downloading rates. Try, later!\n  </h2>\n);\n","import { connect } from 'react-redux';\n\nimport { Converter } from './Converter';\nimport { \n  selectListCurrency, \n  selectCurrencyFrom, \n  selectCurrencyTo, \n  selectCurrentSum,\n  selectIsLoading,\n  selectIsErrorLoading, \n} from '../../store/selector'; \n\nconst mapStateToProps = state => ({\n  listCurrency: selectListCurrency(state),\n  currencyFrom: selectCurrencyFrom(state),\n  currencyTo: selectCurrencyTo(state),\n  currentSum: selectCurrentSum(state),\n  isLoading: selectIsLoading(state),\n  isErrorLoading: selectIsErrorLoading(state),\n});\n\nconst Enhanced = connect(\n  mapStateToProps\n)(Converter);\n\nexport { Enhanced as Converter };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { Select } from '../Select';\nimport { InputSum } from '../InputSum';\nimport { ResultSum } from '../ResultSum';\nimport { Loader } from '../Loader';\nimport { Error } from '../Error';\n\nimport './Converter.scss';\n\n\nexport const Converter = ({ \n  listCurrency, \n  currencyFrom, \n  currencyTo, \n  currentSum,\n  isLoading,\n  isErrorLoading\n}) => (\n  <>\n    {isLoading && <Loader />}\n    {isErrorLoading && <Error />}\n    <div className='converter'>\n      <div className='converter-currency'>\n        <Select\n          className='coverter-currency__from' \n          options={listCurrency} \n          name='from currency' \n          defaultValue={currencyFrom} \n          typeCurrency='currencyFrom'\n        />\n        <InputSum defaultValue={currentSum} />\n      </div>\n      <div className='converter-currency'>\n        <Select\n          className='converter-currency__to' \n          options={listCurrency} \n          name='to currency' \n          defaultValue={currencyTo}\n          typeCurrency='currencyTo' \n        />\n        <ResultSum />\n      </div>\n    </div>\n    <Link className='button-link' to={'currency-rates'}>Show all currencies rates</Link>\n  </>\n);\n\nConverter.propTypes = {\n  listCurrency: PropTypes.shape().isRequired,\n  currencyFrom: PropTypes.string.isRequired,\n  currencyTo: PropTypes.string.isRequired,\n  currentSum: PropTypes.number.isRequired,\n  isLoading: PropTypes.bool\n};\n","import { connect } from 'react-redux';\n\nimport { ListRates } from './ListRates';\nimport { setSortedListRates } from '../../store/actions';\nimport { \n  selectRates, \n  selectBaseCurrency, \n  selectListCurrency,\n  selectSortedListRates, \n} from '../../store/selector';\n\nconst mapStateToProps = state => ({\n  ratesUSD: selectRates(state),\n  baseCurrency: selectBaseCurrency(state),\n  listCurrency: selectListCurrency(state),\n  sortedListRates: selectSortedListRates(state), \n});\n\nconst mapDispatchToProps = dispatch => ({\n  saveSortedListRates: data => dispatch(setSortedListRates(data)),\n});\n\nconst Enhanced = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ListRates);\n\nexport { Enhanced as ListRates };","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ListRates.scss';\n\nexport const ListRates = ({ \n  ratesUSD, \n  baseCurrency, \n  listCurrency, \n  sortedListRates, \n  saveSortedListRates }) => {\n\n  const [pageCurrency, changePageCurrency] = useState(baseCurrency);\n  const sortedList = sortedListRates.length && pageCurrency === baseCurrency\n    ? [...sortedListRates] \n    : Object.entries(ratesUSD)\n      .map(item => [\n        item[0], \n        item[1] / ratesUSD[baseCurrency], \n        listCurrency[item[0]], \n        1\n      ]\n      ).sort((a, b) => a[3] - b[3]);\n  \n  useEffect(() => {\n    saveSortedListRates(sortedList);\n    changePageCurrency(baseCurrency);\n    \n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [baseCurrency]);\n  \n  const handleClick = ({ target: { id } }) => {\n    const elem = sortedList.find(item => item[0] === id);\n    if(elem[3] === 1) {\n      elem[3] = 0\n    } else {\n      elem[3] = 1\n    }\n    sortedList.sort((a, b) => {\n      if(a[3] === b[3]){\n        if(a[0] < b[0]) return -1;\n        if(a[0] > b[0]) return 1;\n        if(a[0] === b[0]) return 0;\n      }\n\n      return a[3] - b[3];\n    });\n    \n    saveSortedListRates(sortedList);\n  }\n  \n  return (\n    <table className=\"table-rates\">\n      <thead>\n        <tr>\n          <th>Currency</th>\n          <th>Rates</th>\n          <th>Country</th>\n        </tr>\n      </thead>\n      <tbody>\n        {sortedList && sortedList\n          .map(item => \n            <tr\n              className=\"table-rates-item\" \n              key={item[0]} \n              id={item[0]}\n              bgcolor={!item[3] ? \"yellow\" : null}\n              onClick={event => handleClick(event)}\n            >\n              <td id={item[0]}>{item[0]}</td>\n              <td id={item[0]}>{item[1].toFixed(5)}</td>\n              <td id={item[0]}>{item[2]}</td>\n            </tr>\n          )\n        }\n      </tbody>\n    </table>\n  );  \n};\n\nListRates.propTypes = {\n  baseCurrency: PropTypes.string.isRequired,\n  ratesUSD: PropTypes.shape().isRequired,\n  listCurrency: PropTypes.shape().isRequired,\n  sortedListRates: PropTypes.arrayOf(PropTypes.array).isRequired\n};\n","import { connect } from 'react-redux';\n\nimport { ListRatesCurrency } from './ListRatesCurrency';\nimport { \n  selectListCurrency, \n  selectBaseCurrency,\n  selectIsLoading,\n  selectIsErrorLoading \n} from '../../store/selector'; \n\nconst mapStateToProps = state => ({\n  listCurrency: selectListCurrency(state),\n  baseCurrency: selectBaseCurrency(state),\n  selectIsLoading: selectIsLoading(state),\n  isErrorLoading: selectIsErrorLoading(state)\n});\n\nconst Enhanced = connect(\n  mapStateToProps\n)(ListRatesCurrency);\n\nexport { Enhanced as ListRatesCurrency };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { Select } from '../Select';\nimport { ListRates } from '../ListRates';\nimport { Loader } from '../Loader';\nimport { Error } from '../Error';\n\nimport './ListRatesCurrency.scss';\n\nexport const ListRatesCurrency = ({ \n  listCurrency, \n  baseCurrency,\n  isLoading,\n  isErrorLoading \n}) => (\n  <>\n    {isLoading && <Loader />}\n    {isErrorLoading && <Error />}\n    <div className=\"rates-currency\">\n      <Link className='button-link' to={'/'}>Currency autoconverter</Link>\n      <h1>Rates currency</h1>\n      <p>\n        *You can click to row in the table with the currency and the row \n        moves on the begin of the table\n      </p>\n      <Select\n        className='converter-currency__base' \n        options={listCurrency} \n        name='base currency' \n        defaultValue={baseCurrency}\n        typeCurrency='currencyBase' \n      />\n      <ListRates />\n    </div>\n  </>\n);\n\nListRatesCurrency.propTypes = {\n  listCurrency: PropTypes.shape().isRequired,\n  baseCurrency: PropTypes.string.isRequired,\n  isLoading: PropTypes.bool,\n};\n","import { connect } from 'react-redux';\n\nimport { App } from './App';\nimport { loadData } from '../../store/actions'; \n\nconst mapDispatch2Props = {\n  loadData,\n};\n\nconst Enhanced = connect(\n  null,\n  mapDispatch2Props\n)(App);\n\nexport { Enhanced as App };\n","import React, { useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { Converter } from '../Converter';\nimport { ListRatesCurrency } from '../ListRatesCurrency';\n\nimport './App.scss';\n\nexport const App = ({ loadData }) => {\n  useEffect(() => {\n    loadData();\n  });\n \n  return (\n    <>\n      <h1 className='header'>Converter Currency</h1>\n      <Switch>\n        <Route path='/' exact component={Converter} />\n        <Route path='/currency-rates' component={ListRatesCurrency} />\n      </Switch>\n    </>\n  )\n};\n\nApp.propTypes = {\n  loadData: PropTypes.func.isRequired\n};\n","import { ACTIONS_TYPES } from './actions';\n\nconst initialState = {\n  listCurrency: {},\n  exchangeRatesUSD: {},\n  isLoading: false,\n  errorLoading: null,\n  currencyFrom: 'USD',\n  currencyTo: 'USD',\n  currentSum: 0,\n  baseCurrency: 'USD',\n  sortedListRates: []\n};\n\n\nexport function rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case ACTIONS_TYPES.SAVE_LIST_CURRENCY: {\n      const { payload } = action;\n\n      return ({\n        ...state,\n        error: null,\n        listCurrency: payload\n      });\n    }\n\n    case ACTIONS_TYPES.SAVE_RATES_USD: {\n      const { payload } = action;\n\n      return ({\n        ...state,\n        error: null,\n        exchangeRatesUSD: payload\n      });\n    };\n\n    case ACTIONS_TYPES.SET_CURRENCY_FROM: {\n      const { payload } = action;\n\n      return ({\n        ...state,\n        currencyFrom: payload\n      });\n    };\n\n    case ACTIONS_TYPES.SET_CURRENCY_TO: {\n      const { payload } = action;\n\n      return ({\n        ...state,\n        currencyTo: payload\n      });\n    };\n\n    case ACTIONS_TYPES.SET_BASE_CURRENCY: {\n      const { payload } = action;\n\n      return ({\n        ...state,\n        baseCurrency: payload\n      });\n    }\n\n    case ACTIONS_TYPES.SET_CURRENT_SUM: {\n      const { payload } = action;\n\n      return ({\n        ...state,\n        currentSum: payload\n      });\n\n    };\n\n    case ACTIONS_TYPES.SET_SORTED_LIST_RATES: {\n      const { payload } = action;\n\n      return ({\n        ...state,\n        sortedListRates: payload\n      });\n    }\n\n    case ACTIONS_TYPES.START_LOADING: {\n      return ({\n        ...state,\n        isLoading: true,\n      });\n    }\n\n    case ACTIONS_TYPES.STOP_LOADING: {\n      return ({\n        ...state,\n        isLoading: false,\n      });\n    }\n\n    case ACTIONS_TYPES.SET_LOAD_ERROR: {\n      const { payload } = action;\n\n      return ({\n        ...state,\n        listCurrency: {},\n        exchangeRatesUSD: {},\n        isLoading: false,\n        errorLoading: payload,\n      });\n    }\n\n    default:\n      return state;\n  }\n};\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { rootReducer } from './rootReducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst middleWares = [thunk];\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(...middleWares))\n);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport { App } from './components/App';\nimport { store } from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
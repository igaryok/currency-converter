{"version":3,"sources":["components/listCurrency/index.js","store/actions.js","components/Select/index.js","components/Select/Select.js","components/InputSum/index.js","components/InputSum/InputSum.js","store/selector.js","components/ResultSum/index.js","components/ResultSum/ResultSum.js","components/Converter/index.js","components/Converter/Converter.js","components/App/index.js","components/App/App.js","store/rootReducer.js","store/index.js","index.js"],"names":["BASE_URL","ACTIONS_TYPES","SAVE_LIST_CURRENCY","SAVE_RATES_USD","START_LOADING","STOP_LOADING","SET_LOAD_ERROR","SET_CURRENCY_FROM","SET_CURRENCY_TO","SET_CURRENT_SUM","Enhanced","connect","dispatch","setCurrencyFrom","value","type","payload","setCurrencyTo","options","name","defaultValue","isInputCurrency","handleChange","toUpperCase","onChange","e","target","className","map","item","key","selected","setCurrentSum","onInput","event","Number","rootSelector","state","selectListCurrency","createSelector","listCurrency","Object","keys","selectCurrencyFrom","currencyFrom","selectCurrencyTo","currencyTo","selectRates","exchangeRatesUSD","selectCurrentSum","currentSum","rates","result","toFixed","mapDispatch2Props","loadData","Promise","all","fetch","then","response","json","data","listCurrencies","saveListCurrency","saveRatesUSD","catch","error","setLoadingError","finally","useEffect","console","log","path","exact","component","Converter","initialState","isLoading","errorLoading","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleWares","thunk","store","createStore","action","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.01e1f20f.chunk.js","sourcesContent":["export * from './listCurrency';\n","const BASE_URL = 'https://openexchangerates.org/api/';\nconst URL_CURRENCY = 'currencies.json';\nconst URL_RATES = 'latest.json?app_id=';\nconst API_KEY = 'be9423d4e8744a938087bb2febb7693e';\n\n\nexport const ACTIONS_TYPES = {\n  SAVE_LIST_CURRENCY: 'SAVE_LIST_CURRENCY',\n  SAVE_RATES_USD: 'SAVE_RATES_USD', \n  START_LOADING: 'START_LOADING',\n  STOP_LOADING: 'STOP_LOADING',\n  SET_LOAD_ERROR: 'SET_LOAD_ERROR',\n  SET_CURRENCY_FROM: 'SET_CUURENCY_FROM',\n  SET_CURRENCY_TO: 'SET_CURRENCY_TO',\n  SET_CURRENT_SUM: 'SET_CURRENT_SUM'\n};\n\nconst saveListCurrency = data => ({\n  type: ACTIONS_TYPES.SAVE_LIST_CURRENCY,\n  payload: data,\n});\n\nconst saveRatesUSD = data => ({\n  type: ACTIONS_TYPES.SAVE_RATES_USD,\n  payload: data\n});\n\nconst startLoading = () => ({\n  type: ACTIONS_TYPES.START_LOADING,\n});\n\nconst stopLoading = () => ({\n  type: ACTIONS_TYPES.STOP_LOADING,\n});\n\nconst setLoadingError = error => ({\n  type: ACTIONS_TYPES.SET_LOAD_ERROR,\n  payload: error,\n});\n\nexport const setCurrencyFrom = value => ({\n  type: ACTIONS_TYPES.SET_CURRENCY_FROM,\n  payload: value\n});\n\nexport const setCurrencyTo = value => ({\n  type: ACTIONS_TYPES.SET_CURRENCY_TO,\n  payload: value\n});\n\nexport const setCurrentSum = value => ({\n  type: ACTIONS_TYPES.SET_CURRENT_SUM,\n  payload: value\n});\n\nexport const loadData = () => dispatch => {\n  dispatch(startLoading());\n  \n  Promise.all([\n    fetch(`${BASE_URL}${URL_CURRENCY}`).then(response => response.json()),\n    fetch(`${BASE_URL}${URL_RATES}${API_KEY}`).then(response => response.json())\n  ]).then(data => {\n    const [listCurrencies, rates] = data;\n\n    dispatch(saveListCurrency(listCurrencies));\n    dispatch(saveRatesUSD(rates.rates));\n  }).catch(error => dispatch(setLoadingError(error)))\n    .finally(dispatch(stopLoading()));\n};\n","import { connect } from 'react-redux';\n\nimport { Select } from './Select';\nimport { setCurrencyFrom, setCurrencyTo } from '../../store/actions'; \n\nconst mapDispatch2Props = dispatch => ({\n  setCurrencyFrom: value => dispatch(setCurrencyFrom(value)),\n  setCurrencyTo: value => dispatch(setCurrencyTo(value))\n});\n\nconst Enhanced = connect(\n  null,\n  mapDispatch2Props\n)(Select);\n\nexport { Enhanced as Select };\n","import React from 'react';\n\nimport './Select.scss';\n\nexport const Select = ({ options, name, defaultValue, isInputCurrency, setCurrencyFrom, setCurrencyTo }) => {\n  const handleChange = isInputCurrency ? setCurrencyFrom : setCurrencyTo;\n\n  return (\n    <label>\n      {name.toUpperCase()}\n      <select \n        onChange={e => handleChange(e.target.value)}\n        className='currency-selector'\n      >\n        {options.map(item => (\n          <option \n            key={item} \n            value={item}\n            selected={defaultValue === item}\n          >\n            {item}\n          </option>\n        ))}\n      </select>\n    </label>\n  )\n}\n","import { connect } from 'react-redux';\n\nimport { InputSum } from './InputSum';\nimport { setCurrentSum } from '../../store/actions'; \n\nconst mapDispatch2Props = dispatch => ({\n  setCurrentSum: value => dispatch(setCurrentSum(value)),\n});\n\nconst Enhanced = connect(\n  null,\n  mapDispatch2Props\n)(InputSum);\n\nexport { Enhanced as InputSum };\n","import React from 'react';\n\nimport './Input.scss';\n\nexport const InputSum = ({ defaultValue,  setCurrentSum }) => {\n\n  return (\n    <input\n      className='input-field' \n      type='number' \n      defaultValue={defaultValue}\n      onInput={event => setCurrentSum(Number(event.target.value))} \n    />\n  )\n}\n","import { createSelector } from 'reselect';\n\nconst rootSelector = state => state;\n\nexport const selectListCurrency = createSelector(\n  rootSelector,\n  ({ listCurrency }) => Object.keys(listCurrency)\n);\n\nexport const selectCurrencyFrom = createSelector(\n  rootSelector,\n  ({ currencyFrom }) => currencyFrom\n);\n\nexport const selectCurrencyTo = createSelector(\n  rootSelector,\n  ({ currencyTo }) => currencyTo\n);\n\n\nexport const selectRates = createSelector(\n  rootSelector,\n  ({ exchangeRatesUSD }) => exchangeRatesUSD\n);\n\nexport const selectCurrentSum = createSelector(\n  rootSelector,\n  ({ currentSum }) => currentSum\n);\n","import { connect } from 'react-redux';\n\nimport { ResultSum } from './ResultSum';\nimport { selectCurrencyFrom, selectCurrencyTo, selectRates, selectCurrentSum } from '../../store/selector'; \n\nconst mapStateToProps = state => ({\n  currencyFrom: selectCurrencyFrom(state),\n  currencyTo: selectCurrencyTo(state),\n  rates: selectRates(state),\n  currentSum: selectCurrentSum(state)\n});\n\nconst Enhanced = connect(\n  mapStateToProps\n)(ResultSum);\n\nexport { Enhanced as ResultSum };","import React from 'react';\n\nexport const ResultSum = ({ currencyFrom, currencyTo, rates, currentSum }) => {\n  const result = currentSum * (rates[currencyTo] / rates[currencyFrom]);\n  \n  return (\n    <label>{result.toFixed(3)}</label>\n  )\n}\n","import { connect } from 'react-redux';\n\nimport { Converter } from './Converter';\nimport { selectListCurrency } from '../../store/selector'; \n\nconst mapStateToProps = state => ({\n  listCurrency: selectListCurrency(state)\n});\n\nconst Enhanced = connect(\n  mapStateToProps\n)(Converter);\n\nexport { Enhanced as Converter };\n","import React from 'react';\n\nimport { Select } from '../Select';\nimport { InputSum } from '../InputSum';\nimport { ResultSum } from '../ResultSum';\n\nimport './Converter.scss';\n\nexport const Converter = ({ listCurrency }) => {\n  \n  return (\n    <div className='converter'>\n      <div className='converter-currency'>\n        <Select\n          className='coverter-currency__from' \n          options={listCurrency} \n          name='from currency' \n          defaultValue='USD' \n          isInputCurrency={true}\n        />\n        <InputSum defaultValue={'0'} />\n      </div>\n      <div className='converter-currency'>\n        <Select\n          className='converter-currency__to' \n          options={listCurrency} \n          name='to currency' \n          defaultValue='USD' \n        />\n        <ResultSum />\n      </div>\n    </div>\n  );\n}","import { connect } from 'react-redux';\n\nimport { App } from './App';\nimport { loadData } from '../../store/actions'; \n\nconst mapDispatch2Props = {\n  loadData,\n};\n\nconst Enhanced = connect(\n  null,\n  mapDispatch2Props\n)(App);\n\nexport { Enhanced as App };\n","import React, { useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { Converter } from '../Converter';\nimport { listCurrency } from '../listCurrency';\nimport './App.scss';\n\nexport const App = ({ loadData }) => {\n  useEffect(() => {\n    loadData();\n  });\n  console.log('render');\n  return (\n    <>\n      <h1 className='header'>Converter Currency</h1>\n      <Switch>\n        <Route path='/' exact component={Converter} />\n        <Route path='/list-curency' component={listCurrency} />\n      </Switch>\n    </>\n  )\n};\n","import { ACTIONS_TYPES } from './actions';\n\nconst initialState = {\n  listCurrency: {},\n  exchangeRatesUSD: {},\n  isLoading: false,\n  errorLoading: null,\n  currencyFrom: 'USD',\n  currencyTo: 'USD',\n  currentSum: 0,\n};\n\n\nexport function rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case ACTIONS_TYPES.SAVE_LIST_CURRENCY: {\n      const { payload } = action;\n\n      return ({\n        ...state,\n        error: null,\n        listCurrency: payload\n      });\n    }\n\n    case ACTIONS_TYPES.SAVE_RATES_USD: {\n      const { payload } = action;\n\n      return ({\n        ...state,\n        error: null,\n        exchangeRatesUSD: payload\n      });\n    };\n\n    case ACTIONS_TYPES.SET_CURRENCY_FROM: {\n      const { payload } = action;\n\n      return ({\n        ...state,\n        currencyFrom: payload\n      });\n    };\n\n    case ACTIONS_TYPES.SET_CURRENCY_TO: {\n      const { payload } = action;\n\n      return ({\n        ...state,\n        currencyTo: payload\n      });\n    };\n\n    case ACTIONS_TYPES.SET_CURRENT_SUM: {\n      const { payload } = action;\n\n      return ({\n        ...state,\n        currentSum: payload\n      });\n\n    };\n\n    case ACTIONS_TYPES.START_LOADING: {\n      return ({\n        ...state,\n        isLoading: true,\n      });\n    }\n\n    case ACTIONS_TYPES.STOP_LOADING: {\n      return ({\n        ...state,\n        isLoading: false,\n      });\n    }\n\n    case ACTIONS_TYPES.SET_LOAD_ERROR: {\n      const { payload } = action;\n\n      return ({\n        ...state,\n        listCurrency: {},\n        exchangeRatesUSD: {},\n        isLoading: false,\n        errorLoading: payload,\n      });\n    }\n\n    default:\n      return state;\n  }\n};\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { rootReducer } from './rootReducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst middleWares = [thunk];\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(...middleWares))\n);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport { App } from './components/App';\nimport { store } from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
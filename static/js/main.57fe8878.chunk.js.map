{"version":3,"sources":["store/actions.js","components/Select/index.js","components/Select/Select.js","components/InputSum/index.js","components/InputSum/InputSum.js","store/selector.js","components/ResultSum/index.js","components/ResultSum/ResultSum.js","components/Converter/index.js","components/Converter/Converter.js","components/ListRates/index.js","components/ListRates/ListRates.js","components/ListRatesCurrency/index.js","components/ListRatesCurrency/ListRatesCurrency.js","components/App/index.js","components/App/App.js","store/rootReducer.js","store/index.js","index.js"],"names":["BASE_URL","ACTIONS_TYPES","SAVE_LIST_CURRENCY","SAVE_RATES_USD","START_LOADING","STOP_LOADING","SET_LOAD_ERROR","SET_CURRENCY_FROM","SET_CURRENCY_TO","SET_CURRENT_SUM","SET_BASE_CURRENCY","Enhanced","connect","dispatch","setCurrencyFrom","value","type","payload","setCurrencyTo","setBaseCurrency","options","name","defaultValue","typeCurrency","handleChange","option","selectHandleChange","listCurrency","Object","keys","toUpperCase","onChange","e","target","className","map","item","key","selected","setCurrentSum","onInput","event","Number","rootSelector","state","selectListCurrency","createSelector","selectCurrencyFrom","currencyFrom","selectCurrencyTo","currencyTo","selectRates","exchangeRatesUSD","selectCurrentSum","currentSum","selectBaseCurrency","baseCurrency","rates","result","toFixed","to","ratesUSD","processedList","entries","sort","a","b","useState","sortedList","changeSortedList","useEffect","id","bgcolor","onClick","elem","find","handleClick","mapDispatch2Props","loadData","Promise","all","fetch","then","response","json","data","listCurrencies","saveListCurrency","saveRatesUSD","catch","error","setLoadingError","finally","path","exact","component","Converter","ListRatesCurrency","initialState","isLoading","errorLoading","exchangeRateBaseCurrency","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleWares","thunk","store","createStore","action","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.57fe8878.chunk.js","sourcesContent":["const BASE_URL = 'https://openexchangerates.org/api/';\nconst URL_CURRENCY = 'currencies.json';\nconst URL_RATES = 'latest.json?app_id=';\nconst API_KEY = 'be9423d4e8744a938087bb2febb7693e';\n\n\nexport const ACTIONS_TYPES = {\n  SAVE_LIST_CURRENCY: 'SAVE_LIST_CURRENCY',\n  SAVE_RATES_USD: 'SAVE_RATES_USD', \n  START_LOADING: 'START_LOADING',\n  STOP_LOADING: 'STOP_LOADING',\n  SET_LOAD_ERROR: 'SET_LOAD_ERROR',\n  SET_CURRENCY_FROM: 'SET_CUURENCY_FROM',\n  SET_CURRENCY_TO: 'SET_CURRENCY_TO',\n  SET_CURRENT_SUM: 'SET_CURRENT_SUM',\n  SET_BASE_CURRENCY: 'SET_BASE_CURRENCY'\n};\n\nconst saveListCurrency = data => ({\n  type: ACTIONS_TYPES.SAVE_LIST_CURRENCY,\n  payload: data,\n});\n\nconst saveRatesUSD = data => ({\n  type: ACTIONS_TYPES.SAVE_RATES_USD,\n  payload: data\n});\n\nconst startLoading = () => ({\n  type: ACTIONS_TYPES.START_LOADING,\n});\n\nconst stopLoading = () => ({\n  type: ACTIONS_TYPES.STOP_LOADING,\n});\n\nconst setLoadingError = error => ({\n  type: ACTIONS_TYPES.SET_LOAD_ERROR,\n  payload: error,\n});\n\nexport const setBaseCurrency = value => ({\n  type: ACTIONS_TYPES.SET_BASE_CURRENCY,\n  payload: value\n});\n\nexport const setCurrencyFrom = value => ({\n  type: ACTIONS_TYPES.SET_CURRENCY_FROM,\n  payload: value\n});\n\nexport const setCurrencyTo = value => ({\n  type: ACTIONS_TYPES.SET_CURRENCY_TO,\n  payload: value\n});\n\nexport const setCurrentSum = value => ({\n  type: ACTIONS_TYPES.SET_CURRENT_SUM,\n  payload: value\n});\n\nexport const loadData = () => dispatch => {\n  dispatch(startLoading());\n  \n  Promise.all([\n    fetch(`${BASE_URL}${URL_CURRENCY}`).then(response => response.json()),\n    fetch(`${BASE_URL}${URL_RATES}${API_KEY}`).then(response => response.json())\n  ]).then(data => {\n    const [listCurrencies, rates] = data;\n\n    dispatch(saveListCurrency(listCurrencies));\n    dispatch(saveRatesUSD(rates.rates));\n  }).catch(error => dispatch(setLoadingError(error)))\n    .finally(dispatch(stopLoading()));\n};\n","import { connect } from 'react-redux';\n\nimport { Select } from './Select';\nimport { \n  setCurrencyFrom, \n  setCurrencyTo, \n  setBaseCurrency } from '../../store/actions'; \n\nconst mapDispatch2Props = dispatch => ({\n  setCurrencyFrom: value => dispatch(setCurrencyFrom(value)),\n  setCurrencyTo: value => dispatch(setCurrencyTo(value)),\n  setBaseCurrency: value => dispatch(setBaseCurrency(value))\n});\n\nconst Enhanced = connect(\n  null,\n  mapDispatch2Props\n)(Select);\n\nexport { Enhanced as Select };\n","import React from 'react';\n\nimport './Select.scss';\n\nexport const Select = ({ \n  options, \n  name, \n  defaultValue, \n  typeCurrency, \n  setCurrencyFrom, \n  setCurrencyTo, \n  setBaseCurrency \n}) => {\n\n  const selectHandleChange = (option) => {\n    switch (option) {\n      case 'currencyFrom':\n        return setCurrencyFrom;\n      case 'currencyTo':\n        return setCurrencyTo;\n      case 'currencyBase':\n        return setBaseCurrency;\n      default:\n        return;\n    }\n  }\n  const handleChange = selectHandleChange(typeCurrency);\n  const listCurrency = Object.keys(options);\n\n  return (\n    <label>\n      {name.toUpperCase()}\n      <select \n        onChange={e => handleChange(e.target.value)}\n        className='currency-selector'\n      >\n        {listCurrency.map(item => (\n          <option \n            key={item} \n            value={item}\n            selected={defaultValue === item}\n          >\n            {item}\n          </option>\n        ))}\n      </select>\n    </label>\n  )\n}\n","import { connect } from 'react-redux';\n\nimport { InputSum } from './InputSum';\nimport { setCurrentSum } from '../../store/actions'; \n\nconst mapDispatch2Props = dispatch => ({\n  setCurrentSum: value => dispatch(setCurrentSum(value)),\n});\n\nconst Enhanced = connect(\n  null,\n  mapDispatch2Props\n)(InputSum);\n\nexport { Enhanced as InputSum };\n","import React from 'react';\n\nimport './Input.scss';\n\nexport const InputSum = ({ defaultValue,  setCurrentSum }) => {\n\n  return (\n    <input\n      className='input-field' \n      type='number' \n      defaultValue={defaultValue}\n      onInput={event => setCurrentSum(Number(event.target.value))} \n    />\n  )\n}\n","import { createSelector } from 'reselect';\n\nconst rootSelector = state => state;\n\nexport const selectListCurrency = createSelector(\n  rootSelector,\n  ({ listCurrency }) => listCurrency\n);\n\nexport const selectCurrencyFrom = createSelector(\n  rootSelector,\n  ({ currencyFrom }) => currencyFrom\n);\n\nexport const selectCurrencyTo = createSelector(\n  rootSelector,\n  ({ currencyTo }) => currencyTo\n);\n\nexport const selectRates = createSelector(\n  rootSelector,\n  ({ exchangeRatesUSD }) => exchangeRatesUSD\n);\n\nexport const selectCurrentSum = createSelector(\n  rootSelector,\n  ({ currentSum }) => currentSum\n);\n\nexport const selectBaseCurrency = createSelector(\n  rootSelector,\n  ({ baseCurrency }) => baseCurrency\n);\n","import { connect } from 'react-redux';\n\nimport { ResultSum } from './ResultSum';\nimport { \n  selectCurrencyFrom, \n  selectCurrencyTo, \n  selectRates, \n  selectCurrentSum \n} from '../../store/selector'; \n\nconst mapStateToProps = state => ({\n  currencyFrom: selectCurrencyFrom(state),\n  currencyTo: selectCurrencyTo(state),\n  rates: selectRates(state),\n  currentSum: selectCurrentSum(state)\n});\n\nconst Enhanced = connect(\n  mapStateToProps\n)(ResultSum);\n\nexport { Enhanced as ResultSum };","import React from 'react';\n\nexport const ResultSum = ({ currencyFrom, currencyTo, rates, currentSum }) => {\n  const result = currentSum * (rates[currencyTo] / rates[currencyFrom]);\n  \n  return (\n    <label>{result.toFixed(3)}</label>\n  )\n}\n","import { connect } from 'react-redux';\n\nimport { Converter } from './Converter';\nimport { selectListCurrency } from '../../store/selector'; \n\nconst mapStateToProps = state => ({\n  listCurrency: selectListCurrency(state)\n});\n\nconst Enhanced = connect(\n  mapStateToProps\n)(Converter);\n\nexport { Enhanced as Converter };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Select } from '../Select';\nimport { InputSum } from '../InputSum';\nimport { ResultSum } from '../ResultSum';\n\nimport './Converter.scss';\n\nexport const Converter = ({ listCurrency }) => {\n  \n  return (\n    <>\n      <div className='converter'>\n        <div className='converter-currency'>\n          <Select\n            className='coverter-currency__from' \n            options={listCurrency} \n            name='from currency' \n            defaultValue='USD' \n            typeCurrency='currencyFrom'\n          />\n          <InputSum defaultValue={'0'} />\n        </div>\n        <div className='converter-currency'>\n          <Select\n            className='converter-currency__to' \n            options={listCurrency} \n            name='to currency' \n            defaultValue='USD'\n            typeCurrency='currencyTo' \n          />\n          <ResultSum />\n        </div>\n      </div>\n      <Link className='button-link' to={'currency-rates'}>Show all currencies rates</Link>\n    </>\n  );\n}","import { connect } from 'react-redux';\n\nimport { ListRates } from './ListRates';\nimport { \n  selectRates, \n  selectBaseCurrency, \n  selectListCurrency \n} from '../../store/selector';\n\nconst mapStateToProps = state => ({\n  ratesUSD: selectRates(state),\n  baseCurrency: selectBaseCurrency(state),\n  listCurrency: selectListCurrency(state) \n});\n\nconst Enhanced = connect(\n  mapStateToProps\n)(ListRates);\n\nexport { Enhanced as ListRates };","import React, { useState, useEffect } from 'react';\n\nimport './ListRates.scss';\n\nexport const ListRates = ({ ratesUSD, baseCurrency, listCurrency }) => {\n  const processedList = Object.entries(ratesUSD)\n      .map(item => [\n        item[0], \n        item[1] / ratesUSD[baseCurrency], \n        listCurrency[item[0]], \n        1\n      ]\n    ).sort((a, b) => a[3] - b[3]);\n  const [sortedList, changeSortedList] = useState([...processedList]);\n  \n  useEffect(() => {\n    changeSortedList([...processedList]);\n    // eslint-disable-next-line\n  }, [baseCurrency, ratesUSD]);\n  \n  const handleClick = ({ target: { id } }) => {\n    const elem = sortedList.find(item => item[0] === id);\n    if(elem[3] === 1) {\n      elem[3] = 0\n    } else {\n      elem[3] = 1\n    }\n    sortedList.sort((a, b) => {\n      if(a[3] === b[3]){\n        if(a[0] < b[0]) return -1;\n        if(a[0] > b[0]) return 1;\n        if(a[0] === b[0]) return 0;\n      }\n\n      return a[3] - b[3];\n    });\n\n    changeSortedList([...sortedList]);\n  }\n\n  return (\n    <table className=\"table-rates\">\n      <thead>\n        <tr>\n          <th>Currency</th>\n          <th>Rates</th>\n          <th>Country</th>\n        </tr>\n      </thead>\n      <tbody>\n        {sortedList && sortedList\n          .map(item => \n            <tr\n              className=\"table-rates-item\" \n              key={item[0]} \n              id={item[0]}\n              bgcolor={!item[3] ? \"yellow\" : null}\n              onClick={event => handleClick(event)}\n            >\n              <td id={item[0]}>{item[0]}</td>\n              <td id={item[0]}>{item[1].toFixed(5)}</td>\n              <td id={item[0]}>{item[2]}</td>\n            </tr>\n          )\n        }\n      </tbody>\n    </table>\n  );  \n};\n","import { connect } from 'react-redux';\n\nimport { ListRatesCurrency } from './ListRatesCurrency';\nimport { selectListCurrency } from '../../store/selector'; \n\nconst mapStateToProps = state => ({\n  listCurrency: selectListCurrency(state)\n});\n\nconst Enhanced = connect(\n  mapStateToProps\n)(ListRatesCurrency);\n\nexport { Enhanced as ListRatesCurrency };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Select } from '../Select';\nimport { ListRates } from '../ListRates';\n\nimport './ListRatesCurrency.scss';\n\nexport const ListRatesCurrency = ({ listCurrency }) => {\n  return(\n    <div className=\"rates-currency\">\n      <Link className='button-link' to={'/'}>Currency autoconverter</Link>\n      <h1>Rates currency</h1>\n      <p>\n        *You can click to row in the table with the currency and the row \n        moves on the begin of the table\n      </p>\n      <Select\n        className='converter-currency__base' \n        options={listCurrency} \n        name='base currency' \n        defaultValue='USD'\n        typeCurrency='currencyBase' \n      />\n      <ListRates />\n    </div>\n  );\n}\n","import { connect } from 'react-redux';\n\nimport { App } from './App';\nimport { loadData } from '../../store/actions'; \n\nconst mapDispatch2Props = {\n  loadData,\n};\n\nconst Enhanced = connect(\n  null,\n  mapDispatch2Props\n)(App);\n\nexport { Enhanced as App };\n","import React, { useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { Converter } from '../Converter';\nimport { ListRatesCurrency } from '../ListRatesCurrency';\n\nimport './App.scss';\n\nexport const App = ({ loadData }) => {\n  useEffect(() => {\n    loadData();\n  });\n \n  return (\n    <>\n      <h1 className='header'>Converter Currency</h1>\n      <Switch>\n        <Route path='/' exact component={Converter} />\n        <Route path='/currency-rates' component={ListRatesCurrency} />\n      </Switch>\n    </>\n  )\n};\n","import { ACTIONS_TYPES } from './actions';\n\nconst initialState = {\n  listCurrency: {},\n  exchangeRatesUSD: {},\n  isLoading: false,\n  errorLoading: null,\n  currencyFrom: 'USD',\n  currencyTo: 'USD',\n  currentSum: 0,\n  baseCurrency: 'USD',\n  exchangeRateBaseCurrency: {}\n};\n\n\nexport function rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case ACTIONS_TYPES.SAVE_LIST_CURRENCY: {\n      const { payload } = action;\n\n      return ({\n        ...state,\n        error: null,\n        listCurrency: payload\n      });\n    }\n\n    case ACTIONS_TYPES.SAVE_RATES_USD: {\n      const { payload } = action;\n\n      return ({\n        ...state,\n        error: null,\n        exchangeRatesUSD: payload\n      });\n    };\n\n    case ACTIONS_TYPES.SET_CURRENCY_FROM: {\n      const { payload } = action;\n\n      return ({\n        ...state,\n        currencyFrom: payload\n      });\n    };\n\n    case ACTIONS_TYPES.SET_CURRENCY_TO: {\n      const { payload } = action;\n\n      return ({\n        ...state,\n        currencyTo: payload\n      });\n    };\n\n    case ACTIONS_TYPES.SET_BASE_CURRENCY: {\n      const { payload } = action;\n\n      return ({\n        ...state,\n        baseCurrency: payload\n      });\n    }\n\n    case ACTIONS_TYPES.SET_CURRENT_SUM: {\n      const { payload } = action;\n\n      return ({\n        ...state,\n        currentSum: payload\n      });\n\n    };\n\n    case ACTIONS_TYPES.START_LOADING: {\n      return ({\n        ...state,\n        isLoading: true,\n      });\n    }\n\n    case ACTIONS_TYPES.STOP_LOADING: {\n      return ({\n        ...state,\n        isLoading: false,\n      });\n    }\n\n    case ACTIONS_TYPES.SET_LOAD_ERROR: {\n      const { payload } = action;\n\n      return ({\n        ...state,\n        listCurrency: {},\n        exchangeRatesUSD: {},\n        isLoading: false,\n        errorLoading: payload,\n      });\n    }\n\n    default:\n      return state;\n  }\n};\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { rootReducer } from './rootReducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst middleWares = [thunk];\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(...middleWares))\n);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport { App } from './components/App';\nimport { store } from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n\n  document.getElementById('root')\n);\n"],"sourceRoot":""}